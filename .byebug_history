c
self
column_name
c
params["id"]
params
User.all
User.find(params["id"])
c
params
c
cc
c
params
c
@pattern =~ req.path
c
@http_method
req.request_method
@pattern.match("/users/1")
@pattern.match("users/1")
@pattern
c
@pattern
req.path
c
@users
c
User.all
@users
c
@user.id
@user
c
@@after_initialize_methods
c
@@after_initialize_methods
c
@@after_initialize_methods
c
@after_initialize_methods
self.class.after_initialize_methods
c
@after_initialize_methods
c
@after_initialize
self
c
self.class.after_initialize
@after_initialize
c
methods
c
n
c
n
c
params
n
s
params["user"]
c
params[:user]
params
c
params["user"]
params["user]
params[:user]
params
c
@http_method
!!(@pattern =~ req.path)
@pattern =~ req.path
@pattern.match(req.path)
@pattern
req.path
c
@pattern
req.path
c
@pattern.match(req.path)
@pattern.class
req.path
@pattern
c
@pattern
c
@pattern
req.path
c
@pattern
req.path
c
@pattern
req.path
c
req.path
@pattern
c
n
c
params
c
req.path
n
c
req.path
n
c
n
s
c
req.path
n
c
req.full_path
req.path
n
req.path
req.method
c
req.path
@pattern
c
@pattern =~ req.path
@pattern
c
@pattern.class
@pattern
/A\//z/.match("/")
/A//z/.match("/")
/A\/z/.match("/")
@pattern.match(req.path)
@pattern
c
@pattern
c
@pattern
c
@pattern
"\A\/\z".match(req.path)[1]
"\A\/\z".match(req.path)[1\
"\A\/\z".match(req.path)[0]
a
a = _
"\A\/\z".match(req.path)
req.path
@pattern
c
cc
c
@pattern
req.path
c
req.path
req.pth
c
SQL_FILE
c
db_file_name
c
n
@db
n
@db
db_file_name
c
n
commands
n
s
n
SQL_FILE
DB_FILE
c
args
c
DB_FILE
c
SQL_FILE
Dir['./../db/*.db']
Dir['./db/*.db']
DB_FILE
db_file_name
db_file_naje
