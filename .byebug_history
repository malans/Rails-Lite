c
exit
through_options.query_options
source_options.query_options
source_options
c
exit
self.blank("")
self
User.blank?("")
User.methods - Object.methods
SQLObject.methods - Object.methods
blank?("")
c
blank?("")
c
blank?(through_where_line)
through_where_line
c
cc
c
a.where_params
a = query_options.call
query_options.call
options.model_class.where({options.foreign_key => primary_key_value}).class
options.model_class.where({options.foreign_key => primary_key_value})
options.model_class.where({options.foreign_key => primary_key_value}).merge(query_options)
query_options
options.model_class
c
options.model_class
options
c
defaults[:query_options]
c
a.inspect
a=defaults[:query_options].call
_.inspect
defaults[:query_options].call
defaults[:query_options]
c
self
c
self
c
self.class.columns
self.columns
self
c
n
c
n
s
results
n
c
where_line = params.keys.map { |key| "#{key} = ?" }.join(" AND ")
where_line
table_name
params.values
c
where_params.values
where_params
where_line
c
where_params
n
c
n
where_line
n
where_params
table_name
n
table_name
s
c
n
c
exit
errors
n
otherRecords
n
where_hash
n
s
where_scope_hash
n
scope_fields
n
s
errors
n
s
c
otherRecords.empty?
record.errors
otherRecords
n
where_hash
n
s
@columns
where_scope_hash
n
scope_fields
n
s
n
s
record.errors
c
scope_fields
options
n
s
errors
validation_options
n
c
record.errors
n
object
objec
s
n
column_value
column
n
s
n
column
column_value
n
column
@options
s
c
record.errors
n
!object
nil.respond_to?(:empty?)
object
s
n
@options
n
s
c
record.errors
n
"".empty?
object
object.respond_to?(:empty?)
object.respond_to(:empty?)
s
n
s
c
BLANK_RE
s
n
s
c
"marcus".blank?
"".blank?
"".blan?
column_value
@options
column
n
s
c
"marcus".blank?
column
column_value
n
s
c
record.errors
n
column_value.blank?
n
column_value
n
column
@columns
@options
s
c
"".blank?
@options
column_value
n
column
s
self
@columns
c
columns
column
self.send(column.to_sym)
self
column
s
c
n
record.errors
errors
n
column_value.length
n
option_value
s
@options
column_value
n
s
errors
n
s
c
n
column_value
n
column
s
record.password
record.passwod
record
self
s
n
@columns
s
c
record.password
record.passwrod
record
@columns
self
s
n
validation_options
self
n
self
record
s
n
s
self.class.validation_options
validation_options
s
c
