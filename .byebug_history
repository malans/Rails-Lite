c
@users.each { |user| puts current_user.pending_friends.include?(user)}
@users.each { |user| current_user.pending_friends.include?(user)}
@users.each do |user|
current_user.pending_friends.include?(user)
user.username
@users
c
current_user
@users.first
c
n
@already_built_response
action
n
content
n
already_built_response?
n
s
n
template_fname
n
path_split
n
pn
s
c
@user
n
Regexp.new(/\/users\/(?<id>\d+)$/) =~ req.referer
req.referer
c
req.referer
Regexp.new(/\/users\/(?<id>\d+)$/) =~ req.referer
c
n
c
Regexp.new(/\/users\/(?<id>\d+)$/).match("http://localhost:3000/users")
Regexp.new(/\/users\/(?<id>\d+)$/).match("http://localhost:3000/users")["id"]
Regexp.new(/\/users\/(?<id>\d+)$/).match("http://localhost:3000/users)["id"]
Regexp.new(/\/users\/(?<id>\d+)$/).match(req.referer)["id"]
Regexp.new(/\/users\/(?<id>\d+)$/).match(req.referer).id
Regexp.new(/\/users\/(?<id>\d+)$/).match(req.referer)
m = Regexp.new(/\/users\/(?<id>\d+)$/).match(req.referer)
m = _
Regexp.new(/\/users\/(?<id>\d+)$/).match(req.referer)
Regexp.new(/\/users\/(?<id>\d+)$/) =~ req.referer
Regexp.new(/^\/users\/(?<id>\d+)$/) =~ req.referer
req.referer
c
File.join(dir_path, "..", "views")
File.join(dir_path, "..", "views", path_controller_name)
n
dir_path
path_controller_name
File.join(dir_path, "..", "views", path_controller_name)
File.join("marcus", "ramona")
template_name
c
n
template_name
path_controller_name
path_controller_split
n
path_split
n
s
n
c
req.referer
request.referer
c
template_fname
n
c
n
template_name
path_controller_name
n
path_split
n
s
n
template_fname
n
"#{template_name}.html.erb"
template_name
dir_path
n
dir_path
